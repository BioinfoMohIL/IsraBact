
# Trim basespace_collection_id (run_name) because spaces cause problem
run_name_trimmed=$(echo "N_020" | awk '{$1=$1;print}')

# set basespace name and id variables
if [[ ! -z "" ]]; then
    sample_identifier="NM256"
    dataset_name=""
else
    sample_identifier="NM256"
    dataset_name="NM256"
fi
    
# print all relevant input variables to stdout
echo -e "sample_identifier: ${sample_identifier}\ndataset_name: ${dataset_name}\nbasespace_collection_id: $run_name_trimmed"
        
#Set BaseSpace comand prefix
bs_command="bs --api-server=https://api.basespace.illumina.com --access-token=4acb4557c76940d99ed57dfd3212d423"
echo "bs_command: ${bs_command}"

#Grab BaseSpace Run_ID from given BaseSpace Run Name
run_id=$(${bs_command} list run --retry | grep "$run_name_trimmed" | awk -F "|" '{ print $3 }' | awk '{$1=$1;print}' )
echo "run_id: ${run_id}" 
        
if [[ ! -z "${run_id}" ]]; then 
    #Grab BaseSpace Dataset ID from dataset lists within given run 
    dataset_id_array=($(${bs_command} list dataset --retry --input-run=${run_id} | grep "${dataset_name}" | awk -F "|" '{ print $3 }' )) 
    echo "dataset_id: ${dataset_id_array[*]}"
        
else 
    #Try Grabbing BaseSpace Dataset ID from project name
    echo "Could not locate a run_id via Basespace runs, attempting to search Basespace projects now..."
            
    project_id=$(${bs_command} list project --retry | grep "$run_name_trimmed" | awk -F "|" '{ print $3 }' | awk '{$1=$1;print}' )
            
    echo "project_id: ${project_id}" 

    if [[ ! -z "${project_id}" ]]; then 
        echo "project_id identified via Basespace, now searching for dataset_id within project_id ${project_id}..."
        dataset_id_array=($(${bs_command} list dataset --retry --project-id=${project_id} | grep "${dataset_name}" | awk -F "|" '{ print $3 }' ))  
        echo "dataset_id: ${dataset_id_array[*]}"
    else       
        echo "No run or project id found associated with input basespace_collection_id: $run_name_trimmed" >&2
        exit 1
    fi      
fi

#Download reads by dataset ID
for index in ${!dataset_id_array[@]}; do
    dataset_id=${dataset_id_array[$index]}
    mkdir ./dataset_${dataset_id} && cd ./dataset_${dataset_id}
        
    echo "dataset download: ${bs_command} download dataset -i ${dataset_id} -o . --retry"
    ${bs_command} download dataset --retry -i ${dataset_id} -o . --retry && cd ..
    echo -e "downloaded data: \n $(ls ./dataset_*/*)"
done

# rename FASTQ files to add back in underscores that Illumina/Basespace changed into hyphens
echo "Concatenating and renaming FASTQ files to add back underscores in basespace_sample_name"
# setting a new bash variable to use for renaming during concatenation of FASTQs
# SAMPLENAME_HYPHEN_INSTEAD_OF_UNDERSCORES=$(echo $sample_identifier | sed 's|_|-|g' | sed 's|\.|-|g')

# echo $SAMPLENAME_HYPHEN_INSTEAD_OF_UNDERSCORES > 'sample_id.txt'

echo $sample_identifier > 'sample_id.txt'
 

for fwd_read in ./dataset_*/${sample_identifier}_*R1_*.fastq.gz; do
    if [[ -s $fwd_read ]]; then
        read1_name=$(basename "$fwd_read")

        echo ${read1_name} > read1_name.txt
        cat $fwd_read      > fwd.fastq.gz
                
    fi
done

for rev_read in ./dataset_*/${sample_identifier}_*R2_*.fastq.gz; do
    if [[ -s $rev_read ]]; then
        read2_name=$(basename "$rev_read")

        echo ${read2_name} > read2_name.txt
        cat $rev_read      > rev.fastq.gz
    fi
done
    